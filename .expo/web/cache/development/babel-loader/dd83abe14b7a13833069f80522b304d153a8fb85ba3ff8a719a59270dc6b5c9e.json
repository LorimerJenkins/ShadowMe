{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useRef, useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { AuthContext } from \"../utils/AuthSession\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar commonQuestions = [\"Where's good for food around here?\", \"How do I book a stay?\", \"There is a problem with my property.\"];\nvar ChatTab = function ChatTab() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    messages = _useState2[0],\n    setMessages = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    input = _useState4[0],\n    setInput = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    answeredQuestions = _useState6[0],\n    setAnsweredQuestions = _useState6[1];\n  var scrollRef = useRef(null);\n  var _useContext = useContext(AuthContext),\n    userDetails = _useContext.userDetails;\n  var sendMessage = function sendMessage(message, sender, questionIndex) {\n    setMessages([].concat(_toConsumableArray(messages), [{\n      id: messages.length,\n      text: message,\n      sender: sender\n    }]));\n    if (answeredQuestions.length !== commonQuestions.length) setAnsweredQuestions(commonQuestions.map(function (_, index) {\n      return index;\n    }));\n  };\n  var getMessageStyle = function getMessageStyle(sender) {\n    return {\n      backgroundColor: sender === 'user' ? '#e6e6e6' : '#d1e7dd',\n      marginVertical: 5,\n      padding: 10,\n      borderRadius: 5,\n      maxWidth: '80%'\n    };\n  };\n  var renderMessage = function renderMessage(_ref) {\n    var item = _ref.item;\n    return _jsxs(View, {\n      style: styles.messageContainer,\n      children: [_jsx(View, {\n        style: getMessageStyle(item.sender),\n        children: _jsx(Text, {\n          style: styles.text,\n          children: item.text\n        })\n      }), item.sender === 'user' && userDetails && userDetails.picture && _jsx(Image, {\n        source: {\n          uri: userDetails.picture\n        },\n        style: styles.profilePic\n      })]\n    });\n  };\n  return _jsxs(KeyboardAvoidingView, {\n    behavior: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n    style: styles.container,\n    keyboardVerticalOffset: 10,\n    children: [_jsx(FlatList, {\n      ref: scrollRef,\n      data: messages,\n      renderItem: renderMessage,\n      keyExtractor: function keyExtractor(item) {\n        return item.id.toString();\n      },\n      style: styles.chatContainer,\n      onContentSizeChange: function onContentSizeChange() {\n        var _scrollRef$current;\n        return (_scrollRef$current = scrollRef.current) == null ? void 0 : _scrollRef$current.scrollToEnd({\n          animated: true\n        });\n      },\n      ListHeaderComponent: _jsx(Text, {\n        style: styles.header,\n        children: \"How can we help you?\"\n      })\n    }), _jsx(View, {\n      style: styles.questionsContainer,\n      children: commonQuestions.map(function (question, index) {\n        return !answeredQuestions.includes(index) && _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return sendMessage(question, 'user', index);\n          },\n          children: _jsx(Text, {\n            style: styles.question,\n            children: question\n          })\n        }, index);\n      })\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Type your message...\",\n      value: input,\n      onChangeText: setInput,\n      onSubmitEditing: function onSubmitEditing() {\n        sendMessage(input, 'user');\n        setInput('');\n      }\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white'\n  },\n  header: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    marginVertical: 30\n  },\n  chatContainer: {\n    flex: 1,\n    paddingHorizontal: 10\n  },\n  text: {\n    fontSize: 16\n  },\n  questionsContainer: {\n    borderTopWidth: 1,\n    borderTopColor: '#e6e6e6',\n    paddingVertical: 10,\n    paddingHorizontal: 10,\n    flexDirection: 'row',\n    flexWrap: 'wrap'\n  },\n  question: {\n    fontSize: 16,\n    color: '#000000',\n    marginBottom: 10,\n    backgroundColor: '#e6e6e6',\n    paddingVertical: 10,\n    paddingHorizontal: 15,\n    borderRadius: 20,\n    margin: 5\n  },\n  input: {\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    margin: 10,\n    paddingHorizontal: 10,\n    borderRadius: 5\n  },\n  messageContainer: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'flex-end',\n    marginHorizontal: 10\n  },\n  profilePic: {\n    width: 30,\n    height: 30,\n    marginLeft: 10,\n    borderRadius: 15\n  }\n});\nexport default ChatTab;","map":{"version":3,"names":["React","useState","useRef","useContext","View","Text","StyleSheet","TouchableOpacity","TextInput","FlatList","KeyboardAvoidingView","Platform","Image","AuthContext","jsx","_jsx","jsxs","_jsxs","commonQuestions","ChatTab","_useState","_useState2","_slicedToArray","messages","setMessages","_useState3","_useState4","input","setInput","_useState5","_useState6","answeredQuestions","setAnsweredQuestions","scrollRef","_useContext","userDetails","sendMessage","message","sender","questionIndex","concat","_toConsumableArray","id","length","text","map","_","index","getMessageStyle","backgroundColor","marginVertical","padding","borderRadius","maxWidth","renderMessage","_ref","item","style","styles","messageContainer","children","picture","source","uri","profilePic","behavior","OS","container","keyboardVerticalOffset","ref","data","renderItem","keyExtractor","toString","chatContainer","onContentSizeChange","_scrollRef$current","current","scrollToEnd","animated","ListHeaderComponent","header","questionsContainer","question","includes","onPress","placeholder","value","onChangeText","onSubmitEditing","create","flex","fontSize","fontWeight","textAlign","paddingHorizontal","borderTopWidth","borderTopColor","paddingVertical","flexDirection","flexWrap","color","marginBottom","margin","height","borderColor","borderWidth","justifyContent","alignItems","marginHorizontal","width","marginLeft"],"sources":["/Users/Lorimer/Desktop/Othent.io/ShadowMe/src/tabs/ChatTab.tsx"],"sourcesContent":["import React, { useState, useRef, useContext } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TouchableOpacity,\n  TextInput,\n  FlatList,\n  ViewStyle,\n  KeyboardAvoidingView,\n  Platform,\n  Image\n} from 'react-native';\nimport { AuthContext } from '../utils/AuthSession';\n\ninterface Message {\n  id: number;\n  text: string;\n  sender: 'user' | 'helper';\n}\n\nconst commonQuestions = [\n  \"Where's good for food around here?\",\n  \"How do I book a stay?\",\n  \"There is a problem with my property.\",\n];\n\nconst ChatTab = () => {\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [input, setInput] = useState('');\n  const [answeredQuestions, setAnsweredQuestions] = useState<number[]>([]);\n  const scrollRef = useRef<FlatList<Message>>(null);\n\n  const { userDetails } = useContext(AuthContext);\n\n  const sendMessage = (message: string, sender: 'user' | 'helper', questionIndex?: number) => {\n    setMessages([...messages, { id: messages.length, text: message, sender }]);\n    if (answeredQuestions.length !== commonQuestions.length)\n      setAnsweredQuestions(commonQuestions.map((_, index) => index));\n  };\n\n  const getMessageStyle = (sender: 'user' | 'helper'): ViewStyle => ({\n    backgroundColor: sender === 'user' ? '#e6e6e6' : '#d1e7dd',\n    marginVertical: 5,\n    padding: 10,\n    borderRadius: 5,\n    maxWidth: '80%',\n  });\n\n  const renderMessage = ({ item }: { item: Message }) => (\n    <View style={styles.messageContainer}>\n      <View style={getMessageStyle(item.sender)}>\n        <Text style={styles.text}>{item.text}</Text>\n      </View>\n      {item.sender === 'user' && userDetails && userDetails.picture && (\n        <Image source={{ uri: userDetails.picture }} style={styles.profilePic} />\n      )}\n    </View>\n  );\n\n  return (\n    <KeyboardAvoidingView\n      behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\n      style={styles.container}\n      keyboardVerticalOffset={10}\n    >\n      <FlatList<Message>\n        ref={scrollRef}\n        data={messages}\n        renderItem={renderMessage}\n        keyExtractor={(item) => item.id.toString()}\n        style={styles.chatContainer}\n        onContentSizeChange={() => scrollRef.current?.scrollToEnd({ animated: true })}\n        ListHeaderComponent={<Text style={styles.header}>How can we help you?</Text>}\n      />\n      <View style={styles.questionsContainer}>\n        {commonQuestions.map((question, index) => (\n          !answeredQuestions.includes(index) && (\n            <TouchableOpacity key={index} onPress={() => sendMessage(question, 'user', index)}>\n              <Text style={styles.question}>{question}</Text>\n            </TouchableOpacity>\n          )\n        ))}\n      </View>\n      <TextInput\n        style={styles.input}\n        placeholder=\"Type your message...\"\n        value={input}\n        onChangeText={setInput}\n        onSubmitEditing={() => {\n          sendMessage(input, 'user');\n          setInput('');\n        }}\n      />\n    </KeyboardAvoidingView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n  },\n  header: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    marginVertical: 30,\n  },\n  chatContainer: {\n    flex: 1,\n    paddingHorizontal: 10,\n  },\n  text: {\n    fontSize: 16,\n  },\n  questionsContainer: {\n    borderTopWidth: 1,\n    borderTopColor: '#e6e6e6',\n    paddingVertical: 10,\n    paddingHorizontal: 10,\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  question: {\n    fontSize: 16,\n    color: '#000000',\n    marginBottom: 10,\n    backgroundColor: '#e6e6e6',\n    paddingVertical: 10,\n    paddingHorizontal: 15,\n    borderRadius: 20,\n    margin: 5,\n  },\n  input: {\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    margin: 10,\n    paddingHorizontal: 10,\n    borderRadius: 5,\n  },\n  messageContainer: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'flex-end',\n    marginHorizontal: 10,\n  },\n  profilePic: {\n    width: 30,\n    height: 30,\n    marginLeft: 10,\n    borderRadius: 15\n  },\n});\n\nexport default ChatTab;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}