{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Picker } from '@react-native-picker/picker';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar TradeModal = function TradeModal(_ref) {\n  var visible = _ref.visible,\n    onClose = _ref.onClose,\n    onTrade = _ref.onTrade;\n  var _useState = useState('market'),\n    _useState2 = _slicedToArray(_useState, 2),\n    orderType = _useState2[0],\n    setOrderType = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    amount = _useState4[0],\n    setAmount = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    price = _useState6[0],\n    setPrice = _useState6[1];\n  return _jsx(Modal, {\n    transparent: true,\n    visible: visible,\n    animationType: \"slide\",\n    onRequestClose: onClose,\n    children: _jsx(View, {\n      style: styles.modalOverlay,\n      children: _jsxs(View, {\n        style: styles.modalContainer,\n        children: [_jsx(TouchableOpacity, {\n          onPress: onClose,\n          style: styles.closeButton,\n          children: _jsx(Text, {\n            children: \"Close\"\n          })\n        }), _jsxs(Picker, {\n          selectedValue: orderType,\n          onValueChange: function onValueChange(itemValue, itemIndex) {\n            return setOrderType(itemValue);\n          },\n          style: styles.pickerContainer,\n          children: [_jsx(Picker.Item, {\n            label: \"Market Order\",\n            value: \"market\"\n          }), _jsx(Picker.Item, {\n            label: \"Limit Order\",\n            value: \"limit\"\n          })]\n        }), _jsx(TextInput, {\n          value: amount,\n          onChangeText: setAmount,\n          placeholder: \"Amount\",\n          keyboardType: \"numeric\",\n          style: styles.input\n        }), orderType === 'limit' && _jsx(TextInput, {\n          value: price,\n          onChangeText: setPrice,\n          placeholder: \"Price\",\n          keyboardType: \"numeric\",\n          style: styles.input\n        }), _jsxs(View, {\n          style: styles.summaryContainer,\n          children: [_jsx(Text, {\n            children: \"Order Summary:\"\n          }), _jsx(Text, {\n            children: `Order Type: ${orderType}`\n          }), _jsx(Text, {\n            children: `Amount: ${amount}`\n          }), orderType === 'limit' && _jsx(Text, {\n            children: `Price: ${price}`\n          })]\n        }), _jsxs(View, {\n          style: styles.buttonContainer,\n          children: [_jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return onTrade(orderType, amount, orderType === 'limit' ? price : undefined, 'buy');\n            },\n            style: styles.buyButton,\n            children: _jsx(Text, {\n              style: styles.buttonText,\n              children: \"Buy\"\n            })\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return onTrade(orderType, amount, orderType === 'limit' ? price : undefined, 'sell');\n            },\n            style: styles.sellButton,\n            children: _jsx(Text, {\n              style: styles.buttonText,\n              children: \"Sell\"\n            })\n          })]\n        })]\n      })\n    })\n  });\n};\nvar BuySellButtons = function BuySellButtons(_ref2) {\n  var onBuy = _ref2.onBuy,\n    onSell = _ref2.onSell;\n  return _jsxs(View, {\n    style: styles.buttonContainer,\n    children: [_jsx(TouchableOpacity, {\n      onPress: onBuy,\n      style: styles.buyButton,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Buy\"\n      })\n    }), _jsx(TouchableOpacity, {\n      onPress: onSell,\n      style: styles.sellButton,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Sell\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  closeButton: {\n    alignSelf: 'flex-end',\n    padding: 10\n  },\n  pickerContainer: {\n    borderWidth: 1,\n    borderColor: '#ddd',\n    borderRadius: 4,\n    marginBottom: 10\n  },\n  input: {\n    padding: 10,\n    backgroundColor: '#f0f0f0',\n    borderRadius: 4,\n    marginVertical: 10,\n    fontSize: 16\n  },\n  summaryContainer: {\n    padding: 10,\n    backgroundColor: '#f9f9f9',\n    borderRadius: 4,\n    marginVertical: 10\n  },\n  confirmButton: {\n    backgroundColor: '#008CBA',\n    padding: 10,\n    borderRadius: 4,\n    alignItems: 'center'\n  },\n  confirmButtonText: {\n    color: '#fff',\n    fontSize: 18\n  },\n  buyButton: {\n    flex: 1,\n    backgroundColor: 'green',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 5,\n    padding: 10\n  },\n  sellButton: {\n    flex: 1,\n    backgroundColor: 'red',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 5,\n    padding: 10\n  },\n  buttonText: {\n    color: 'black',\n    fontSize: 18\n  },\n  modalOverlay: {\n    flex: 1,\n    justifyContent: 'flex-end',\n    backgroundColor: 'rgba(0,0,0,0.5)'\n  },\n  modalContainer: {\n    backgroundColor: '#fff',\n    borderRadius: 20,\n    padding: 20,\n    width: '100%',\n    alignSelf: 'center'\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    padding: 10,\n    backgroundColor: '#fff'\n  }\n});\nexport { TradeModal, BuySellButtons };","map":{"version":3,"names":["React","useState","View","Text","StyleSheet","TouchableOpacity","Modal","TextInput","Picker","jsx","_jsx","jsxs","_jsxs","TradeModal","_ref","visible","onClose","onTrade","_useState","_useState2","_slicedToArray","orderType","setOrderType","_useState3","_useState4","amount","setAmount","_useState5","_useState6","price","setPrice","transparent","animationType","onRequestClose","children","style","styles","modalOverlay","modalContainer","onPress","closeButton","selectedValue","onValueChange","itemValue","itemIndex","pickerContainer","Item","label","value","onChangeText","placeholder","keyboardType","input","summaryContainer","buttonContainer","undefined","buyButton","buttonText","sellButton","BuySellButtons","_ref2","onBuy","onSell","create","alignSelf","padding","borderWidth","borderColor","borderRadius","marginBottom","backgroundColor","marginVertical","fontSize","confirmButton","alignItems","confirmButtonText","color","flex","justifyContent","width","flexDirection"],"sources":["/Users/Lorimer/Desktop/Othent.io/ShadowMe/src/components/TradeModal.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  View, Text, StyleSheet, TouchableOpacity, Modal, TextInput, Dimensions\n} from 'react-native';\nimport { Picker } from '@react-native-picker/picker';\n\n\ninterface TradeModalProps {\n    visible: boolean;\n    onClose: () => void;\n    onTrade: (orderType: string, amount: string, price: string | undefined, action: string) => void;\n  }\n\nconst TradeModal: React.FC<TradeModalProps> = ({ visible, onClose, onTrade }) => {\n  const [orderType, setOrderType] = useState('market');\n  const [amount, setAmount] = useState('');\n  const [price, setPrice] = useState('');\n\n  return (\n    <Modal\n        transparent={true}\n        visible={visible}\n        animationType=\"slide\"\n        onRequestClose={onClose}\n    >\n      <View style={styles.modalOverlay}>\n        <View style={styles.modalContainer}>\n\n          <TouchableOpacity onPress={onClose} style={styles.closeButton}>\n            <Text>Close</Text>\n          </TouchableOpacity>\n\n          <Picker\n            selectedValue={orderType}\n            onValueChange={(itemValue, itemIndex) => setOrderType(itemValue)}\n            style={styles.pickerContainer} \n            >\n            <Picker.Item label=\"Market Order\" value=\"market\" />\n            <Picker.Item label=\"Limit Order\" value=\"limit\" />\n            </Picker>\n\n            <TextInput\n                value={amount}\n                onChangeText={setAmount}\n                placeholder=\"Amount\"\n                keyboardType=\"numeric\"\n                style={styles.input}\n            />\n\n            {orderType === 'limit' && (\n            <TextInput\n                value={price}\n                onChangeText={setPrice}\n                placeholder=\"Price\"\n                keyboardType=\"numeric\"\n                style={styles.input}\n            />\n            )}\n\n            <View style={styles.summaryContainer}>\n            <Text>Order Summary:</Text>\n            <Text>{`Order Type: ${orderType}`}</Text>\n            <Text>{`Amount: ${amount}`}</Text>\n            {orderType === 'limit' && <Text>{`Price: ${price}`}</Text>}\n            </View>\n\n\n            <View style={styles.buttonContainer}>\n            <TouchableOpacity\n                onPress={() => onTrade(orderType, amount, orderType === 'limit' ? price : undefined, 'buy')}\n                style={styles.buyButton}\n            >\n                <Text style={styles.buttonText}>Buy</Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n                onPress={() => onTrade(orderType, amount, orderType === 'limit' ? price : undefined, 'sell')}\n                style={styles.sellButton}\n            >\n                <Text style={styles.buttonText}>Sell</Text>\n            </TouchableOpacity>\n            </View>\n\n        </View>\n      </View>\n    </Modal>\n  );\n};\n\ninterface BuySellButtonsProps {\n  onBuy: () => void;\n  onSell: () => void;\n}\n\nconst BuySellButtons: React.FC<BuySellButtonsProps> = ({ onBuy, onSell }) => (\n  <View style={styles.buttonContainer}>\n    <TouchableOpacity onPress={onBuy} style={styles.buyButton}>\n      <Text style={styles.buttonText}>Buy</Text>\n    </TouchableOpacity>\n    <TouchableOpacity onPress={onSell} style={styles.sellButton}>\n      <Text style={styles.buttonText}>Sell</Text>\n    </TouchableOpacity>\n  </View>\n);\n\n\nconst styles = StyleSheet.create({\n  closeButton: {\n    alignSelf: 'flex-end',\n    padding: 10,\n  },\n  pickerContainer: {\n    borderWidth: 1,\n    borderColor: '#ddd',\n    borderRadius: 4,\n    marginBottom: 10,\n  },\n  input: {\n    padding: 10,\n    backgroundColor: '#f0f0f0',\n    borderRadius: 4,\n    marginVertical: 10,\n    fontSize: 16,\n  },\n  summaryContainer: {\n    padding: 10,\n    backgroundColor: '#f9f9f9',\n    borderRadius: 4,\n    marginVertical: 10,\n  },\n  confirmButton: {\n    backgroundColor: '#008CBA',\n    padding: 10,\n    borderRadius: 4,\n    alignItems: 'center',\n  },\n  confirmButtonText: {\n    color: '#fff',\n    fontSize: 18,\n  },\n  buyButton: {\n    flex: 1,\n    backgroundColor: 'green',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 5,\n    padding: 10,\n  },\n  sellButton: {\n    flex: 1,\n    backgroundColor: 'red',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 5,\n    padding: 10,\n  },\n  buttonText: {\n    color: 'black',\n    fontSize: 18,\n  },\n  modalOverlay: {\n    flex: 1,\n    justifyContent: 'flex-end',\n    backgroundColor: 'rgba(0,0,0,0.5)',\n  },\n  modalContainer: {\n    backgroundColor: '#fff',\n    borderRadius: 20,\n    padding: 20,\n    width: '100%',\n    alignSelf: 'center',\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    padding: 10,\n    backgroundColor: '#fff',\n  },\n});\n\n\nexport { TradeModal, BuySellButtons };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}