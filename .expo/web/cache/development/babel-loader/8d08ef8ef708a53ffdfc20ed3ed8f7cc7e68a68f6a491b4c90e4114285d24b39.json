{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport * as AuthSession from 'expo-auth-session';\nimport jwt_decode from 'jwt-decode';\nvar logIn = function () {\n  var _ref = _asyncToGenerator(function* () {\n    try {\n      var discovery = yield AuthSession.fetchDiscoveryAsync(`https://auth.othent.io`);\n      var authRequest = new AuthSession.AuthRequest({\n        clientId: 'TPcAfB1upnH7ldNwdXbe138K5TDU1j7D',\n        redirectUri: AuthSession.makeRedirectUri(),\n        responseType: 'token id_token',\n        scopes: ['openid', 'profile', 'email'],\n        extraParams: {\n          nonce: '1234',\n          transaction_input: JSON.stringify({\n            othentFunction: \"idToken\"\n          })\n        }\n      });\n      yield authRequest.makeAuthUrlAsync(discovery);\n      var result = yield authRequest.promptAsync(discovery);\n      if (result.type === 'success') {\n        if (result.authentication && result.authentication.idToken) {\n          var userDetails = jwt_decode(result.authentication.idToken);\n          return {\n            success: true,\n            userDetails: userDetails\n          };\n        } else {\n          return {\n            success: false,\n            error: 'ID Token is missing'\n          };\n        }\n      } else {\n        return {\n          success: false,\n          error: result\n        };\n      }\n    } catch (error) {\n      return {\n        success: false,\n        error: error\n      };\n    }\n  });\n  return function logIn() {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar logOut = function () {\n  var _ref2 = _asyncToGenerator(function* () {\n    try {\n      AuthSession.dismiss();\n      return {\n        success: true\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error\n      };\n    }\n  });\n  return function logOut() {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport { logIn, logOut };","map":{"version":3,"names":["AuthSession","jwt_decode","logIn","_ref","_asyncToGenerator","discovery","fetchDiscoveryAsync","authRequest","AuthRequest","clientId","redirectUri","makeRedirectUri","responseType","scopes","extraParams","nonce","transaction_input","JSON","stringify","othentFunction","makeAuthUrlAsync","result","promptAsync","type","authentication","idToken","userDetails","success","error","apply","arguments","logOut","_ref2","dismiss"],"sources":["/Users/Lorimer/Desktop/Othent.io/ShadowMe/src/utils/OthentAuth.ts"],"sourcesContent":["import * as AuthSession from 'expo-auth-session';\nimport jwt_decode from 'jwt-decode'\n\nconst logIn = async () => {\n  try {\n    const discovery = await AuthSession.fetchDiscoveryAsync(`https://auth.othent.io`);\n\n    const authRequest = new AuthSession.AuthRequest({\n      clientId: 'TPcAfB1upnH7ldNwdXbe138K5TDU1j7D',\n      redirectUri: AuthSession.makeRedirectUri(),\n      responseType: 'token id_token',\n      scopes: ['openid', 'profile', 'email'],\n      extraParams: {\n        nonce: '1234',\n        transaction_input: JSON.stringify({\n            othentFunction: \"idToken\"\n        }),\n        }\n    });\n\n    await authRequest.makeAuthUrlAsync(discovery);\n\n    const result = await authRequest.promptAsync(discovery);\n\n    if (result.type === 'success') {\n        if (result.authentication && result.authentication.idToken) {\n          const userDetails = jwt_decode(result.authentication.idToken)\n          return {\n            success: true,\n            userDetails,\n          };\n        } else {\n          return {\n            success: false,\n            error: 'ID Token is missing',\n          };\n        }\n      } else {\n        return {\n          success: false,\n          error: result,\n        };\n      }      \n  } catch (error) {\n    return {\n      success: false,\n      error: error,\n    };\n  }\n};\n\nconst logOut = async () => {\n  try {\n    AuthSession.dismiss();\n    return {\n      success: true,\n    };\n  } catch (error) {\n    return {\n      success: false,\n      error: error,\n    };\n  }\n};\n\nexport { logIn, logOut };"],"mappings":";AAAA,OAAO,KAAKA,WAAW,MAAM,mBAAmB;AAChD,OAAOC,UAAU,MAAM,YAAY;AAEnC,IAAMC,KAAK;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;IACxB,IAAI;MACF,IAAMC,SAAS,SAASL,WAAW,CAACM,mBAAmB,CAAE,wBAAuB,CAAC;MAEjF,IAAMC,WAAW,GAAG,IAAIP,WAAW,CAACQ,WAAW,CAAC;QAC9CC,QAAQ,EAAE,kCAAkC;QAC5CC,WAAW,EAAEV,WAAW,CAACW,eAAe,CAAC,CAAC;QAC1CC,YAAY,EAAE,gBAAgB;QAC9BC,MAAM,EAAE,CAAC,QAAQ,EAAE,SAAS,EAAE,OAAO,CAAC;QACtCC,WAAW,EAAE;UACXC,KAAK,EAAE,MAAM;UACbC,iBAAiB,EAAEC,IAAI,CAACC,SAAS,CAAC;YAC9BC,cAAc,EAAE;UACpB,CAAC;QACD;MACJ,CAAC,CAAC;MAEF,MAAMZ,WAAW,CAACa,gBAAgB,CAACf,SAAS,CAAC;MAE7C,IAAMgB,MAAM,SAASd,WAAW,CAACe,WAAW,CAACjB,SAAS,CAAC;MAEvD,IAAIgB,MAAM,CAACE,IAAI,KAAK,SAAS,EAAE;QAC3B,IAAIF,MAAM,CAACG,cAAc,IAAIH,MAAM,CAACG,cAAc,CAACC,OAAO,EAAE;UAC1D,IAAMC,WAAW,GAAGzB,UAAU,CAACoB,MAAM,CAACG,cAAc,CAACC,OAAO,CAAC;UAC7D,OAAO;YACLE,OAAO,EAAE,IAAI;YACbD,WAAW,EAAXA;UACF,CAAC;QACH,CAAC,MAAM;UACL,OAAO;YACLC,OAAO,EAAE,KAAK;YACdC,KAAK,EAAE;UACT,CAAC;QACH;MACF,CAAC,MAAM;QACL,OAAO;UACLD,OAAO,EAAE,KAAK;UACdC,KAAK,EAAEP;QACT,CAAC;MACH;IACJ,CAAC,CAAC,OAAOO,KAAK,EAAE;MACd,OAAO;QACLD,OAAO,EAAE,KAAK;QACdC,KAAK,EAAEA;MACT,CAAC;IACH;EACF,CAAC;EAAA,gBA9CK1B,KAAKA,CAAA;IAAA,OAAAC,IAAA,CAAA0B,KAAA,OAAAC,SAAA;EAAA;AAAA,GA8CV;AAED,IAAMC,MAAM;EAAA,IAAAC,KAAA,GAAA5B,iBAAA,CAAG,aAAY;IACzB,IAAI;MACFJ,WAAW,CAACiC,OAAO,CAAC,CAAC;MACrB,OAAO;QACLN,OAAO,EAAE;MACX,CAAC;IACH,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,OAAO;QACLD,OAAO,EAAE,KAAK;QACdC,KAAK,EAAEA;MACT,CAAC;IACH;EACF,CAAC;EAAA,gBAZKG,MAAMA,CAAA;IAAA,OAAAC,KAAA,CAAAH,KAAA,OAAAC,SAAA;EAAA;AAAA,GAYX;AAED,SAAS5B,KAAK,EAAE6B,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}